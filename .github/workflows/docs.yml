name: Documentation

on:
  push:
    branches: [ main, master ]
    paths:
      - 'docs/**'
      - 'scripts/**'
      - 'mkdocs.yml'
      - 'pyproject.toml'
      - 'uv.lock'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'docs/**'
      - 'scripts/**'
      - 'mkdocs.yml'
      - 'pyproject.toml'
      - 'uv.lock'
      - '.github/workflows/docs.yml'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  UV_CACHE_DIR: /tmp/.uv-cache

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for git operations

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install UV
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Restore uv cache
      uses: actions/cache@v4
      with:
        path: /tmp/.uv-cache
        key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
        restore-keys: |
          uv-${{ runner.os }}-

    - name: Install dependencies
      run: |
        uv sync --frozen

    - name: Generate API documentation
      run: |
        uv run python scripts/generate_docs.py

    - name: Update includes from project configuration
      run: |
        uv run python scripts/update_includes.py

    - name: Build documentation with strict mode
      run: |
        uv run mkdocs build --strict --verbose

    - name: Minimize uv cache
      run: uv cache prune --ci

    - name: Setup Pages
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: actions/configure-pages@v4

    - name: Upload artifact
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: actions/upload-pages-artifact@v3
      with:
        path: './site'

    - name: Upload documentation build for PR preview
      if: github.event_name == 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: documentation-preview
        path: './site'
        retention-days: 7

  deploy:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  quality-check:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install UV
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Restore uv cache
      uses: actions/cache@v4
      with:
        path: /tmp/.uv-cache
        key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
        restore-keys: |
          uv-${{ runner.os }}-

    - name: Install dependencies
      run: |
        uv sync --frozen

    - name: Run pre-commit hooks
      uses: pre-commit/action@v3.0.1

    - name: Test documentation generation
      run: |
        echo "üîÑ Testing documentation generation pipeline..."
        uv run python scripts/generate_docs.py
        echo "‚úÖ API documentation generated"
        uv run python scripts/update_includes.py
        echo "‚úÖ Includes updated from project configuration"
        uv run mkdocs build --strict
        echo "‚úÖ Documentation built successfully"

    - name: Check documentation links (optional)
      continue-on-error: true
      run: |
        # Install htmltest for link checking
        curl -L https://github.com/wjdp/htmltest/releases/download/v0.17.0/htmltest_0.17.0_linux_amd64.tar.gz | tar -xz
        chmod +x htmltest
        ./htmltest --conf .htmltest.yml || echo "‚ö†Ô∏è Link checking completed with warnings (non-blocking)"

    - name: Minimize uv cache
      run: uv cache prune --ci
